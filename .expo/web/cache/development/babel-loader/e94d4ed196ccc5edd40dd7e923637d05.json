{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuv3\\\\RevU_v2\\\\screens\\\\MathsGroupScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { View } from \"../components/Themed\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nexport default function MathsGroupScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  function readUser() {\n    var user;\n    return _regeneratorRuntime.async(function readUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              setUser(JSON.parse(user));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handlePress() {\n    var _id, user;\n\n    return _regeneratorRuntime.async(function handlePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = Math.random().toString(36).substring(7);\n            user = {\n              _id: _id,\n              name: name\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(user)));\n\n          case 4:\n            setUser(user);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleSend(messages) {\n    var writes;\n    return _regeneratorRuntime.async(function handleSend$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            writes = messages.map(function (m) {\n              return chatsRef.add(m);\n            });\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(writes));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (!user) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your name\",\n      value: name,\n      onChangeText: setName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      onPress: handlePress,\n      title: \"Enter the chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    user: user,\n    onSend: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 30\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 20,\n    borderColor: 'gray'\n  }\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuv3/RevU_v2/screens/MathsGroupScreen.tsx"],"names":["React","AsyncStorage","GiftedChat","View","useNavigation","useRoute","MathsGroupScreen","navigation","route","readUser","getItem","user","setUser","JSON","parse","handlePress","_id","Math","random","toString","substring","name","setItem","stringify","handleSend","messages","writes","map","m","chatsRef","add","Promise","all","styles","container","input","setName","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","height","width","borderWidth","marginBottom","borderColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    AsyncStorage,\r\n    Button,\r\n    Dimensions,\r\n    FlatList,\r\n    Pressable,\r\n    ScrollView,\r\n    StyleSheet, TextInput,\r\n    TouchableOpacity\r\n} from 'react-native';\r\n\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\n\r\nimport { Text, View } from '../components/Themed';\r\n\r\nimport {useNavigation, useRoute} from \"@react-navigation/native\";\r\n\r\n\r\nexport default function MathsGroupScreen() {\r\n    const navigation = useNavigation();\r\n    const route = useRoute();\r\n    async function readUser() {\r\n        const user = await AsyncStorage.getItem('user')\r\n        if (user) {\r\n            setUser(JSON.parse(user))\r\n        }\r\n    }\r\n    async function handlePress() {\r\n        const _id = Math.random().toString(36).substring(7)\r\n        const user = { _id, name }\r\n        await AsyncStorage.setItem('user', JSON.stringify(user))\r\n        setUser(user)\r\n    }\r\n    async function handleSend(messages) {\r\n        const writes = messages.map((m) => chatsRef.add(m))\r\n        await Promise.all(writes)\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput style={styles.input} placeholder=\"Enter your name\" value={name} onChangeText={setName} />\r\n                <Button onPress={handlePress} title=\"Enter the chat\" />\r\n            </View>\r\n        )\r\n    }\r\n    return <GiftedChat messages={messages} user={user} onSend={handleSend} />\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 30,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        padding: 15,\r\n        marginBottom: 20,\r\n        borderColor: 'gray',\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}