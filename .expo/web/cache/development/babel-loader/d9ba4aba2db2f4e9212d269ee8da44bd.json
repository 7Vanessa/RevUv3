{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projetrevu\\\\RevUv3\\\\node_modules\\\\react-native-video\\\\Video.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from \"./TextTrackType\";\nimport FilterType from \"./FilterType\";\nimport DRMType from \"./DRMType\";\nimport VideoResizeMode from \"./VideoResizeMode.js\";\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nexport { TextTrackType, FilterType, DRMType };\n\nvar Video = function (_Component) {\n  _inherits(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      if (isNaN(time)) {\n        throw new Error('Specified time is not a number');\n      }\n\n      if (Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(NativeModules.VideoManager.save(options, findNodeHandle(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      if (!_this.props.audioOnly) {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this._onGetLicense = function (event) {\n      if (_this.props.drm && _this.props.drm.getLicense instanceof Function) {\n        var data = event.nativeEvent;\n\n        if (data && data.spcBase64) {\n          var getLicenseOverride = _this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n\n          var getLicensePromise = Promise.resolve(getLicenseOverride);\n          getLicensePromise.then(function (result) {\n            if (result !== undefined) {\n              NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(_this._root));\n            } else {\n              NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(_this._root));\n            }\n          }).catch(function (error) {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(_this._root));\n          });\n        } else {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(_this._root));\n        }\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!NativeModules.UIManager.getViewManagerConfig) {\n        return NativeModules.UIManager[viewManagerName];\n      }\n\n      return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case 'object':\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case 'undefined':\n          return '';\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = resolveAssetSource(this.props.source) || {};\n      var shouldCache = !source.__packager_asset;\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === VideoResizeMode.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === VideoResizeMode.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === VideoResizeMode.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = Object.assign({}, this.props);\n      Object.assign(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n\n      var posterStyle = _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n\n      return React.createElement(View, {\n        style: nativeProps.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, React.createElement(RCTVideo, _extends({\n        ref: this._assignRoot\n      }, nativeProps, {\n        style: StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }\n      })), this.state.showPoster && React.createElement(Image, {\n        style: posterStyle,\n        source: {\n          uri: this.props.poster\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport { Video as default };\nVideo.propTypes = _objectSpread({\n  filter: PropTypes.oneOf([FilterType.NONE, FilterType.INVERT, FilterType.MONOCHROME, FilterType.POSTERIZE, FilterType.FALSE, FilterType.MAXIMUMCOMPONENT, FilterType.MINIMUMCOMPONENT, FilterType.CHROME, FilterType.FADE, FilterType.INSTANT, FilterType.MONO, FilterType.NOIR, FilterType.PROCESS, FilterType.TONAL, FilterType.TRANSFER, FilterType.SEPIA]),\n  filterEnabled: PropTypes.bool,\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  textTracks: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    uri: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([TextTrackType.SRT, TextTrackType.TTML, TextTrackType.VTT]),\n    language: PropTypes.string.isRequired\n  })),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number\n}, ViewPropTypes);\nvar RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projetrevu/RevUv3/node_modules/react-native-video/Video.js"],"names":["React","Component","PropTypes","requireNativeComponent","ViewPropTypes","resolveAssetSource","TextTrackType","FilterType","DRMType","VideoResizeMode","styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","findNodeHandle","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","_onGetLicense","drm","getLicense","Function","data","spcBase64","getLicenseOverride","contentId","licenseUrl","getLicensePromise","Promise","resolve","then","result","undefined","setLicenseResult","setLicenseError","catch","error","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","assign","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","onGetLicense","posterStyle","absoluteFillObject","posterResizeMode","absoluteFill","propTypes","filter","oneOf","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","CLEARKEY","FAIRPLAY","WIDEVINE","PLAYREADY","licenseServer","base64Certificate","certificateUrl","minLoadRetryCount","maxBitRate","Image","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","preferredForwardBufferDuration","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","RCTVideo","nativeOnly"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform, findNodeHandle } from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport DRMType from './DRMType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType, DRMType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  toTypeString(x) {\n    switch (typeof x) {\n      case 'object':\n        return x instanceof Date\n          ? x.toISOString()\n          : JSON.stringify(x); // object, null\n      case 'undefined':\n        return '';\n      default: // boolean, number, string\n        return x.toString();\n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\n\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance,\n        },\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({ showPoster: false });\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (!this.props.audioOnly) {\n      this._hidePoster();\n    }\n\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  _onGetLicense = (event) => {\n    if (this.props.drm && this.props.drm.getLicense instanceof Function) {\n      const data = event.nativeEvent;\n      if (data && data.spcBase64) {\n        const getLicenseOverride = this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n        const getLicensePromise = Promise.resolve(getLicenseOverride); // Handles both scenarios, getLicenseOverride being a promise and not.\n        getLicensePromise.then((result => {\n          if (result !== undefined) {\n            NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(this._root));\n          } else {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(this._root));\n          }\n        })).catch((error) => {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(this._root));\n        });\n      } else {\n        NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(this._root));\n      }\n    }\n  }\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !source.__packager_asset;\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n    FilterType.NONE,\n    FilterType.INVERT,\n    FilterType.MONOCHROME,\n    FilterType.POSTERIZE,\n    FilterType.FALSE,\n    FilterType.MAXIMUMCOMPONENT,\n    FilterType.MINIMUMCOMPONENT,\n    FilterType.CHROME,\n    FilterType.FADE,\n    FilterType.INSTANT,\n    FilterType.MONO,\n    FilterType.NOIR,\n    FilterType.PROCESS,\n    FilterType.TONAL,\n    FilterType.TRANSFER,\n    FilterType.SEPIA,\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number,\n  ]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([\n      DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY\n    ]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func,\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired,\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}