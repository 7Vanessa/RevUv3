{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\navigation\\\\index.tsx\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport GroupScreen from \"../screens/GroupScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Modal\",\n    component: ModalScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: 'Home',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(TabBarIcon, {\n            name: \"code\",\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 38\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"info-circle\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Group\",\n    component: GroupScreen,\n    options: function options(_ref5) {\n      var navigation = _ref5.navigation;\n      return {\n        title: 'Group',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return React.createElement(TabBarIcon, {\n            name: \"code\",\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 38\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref7) {\n              var pressed = _ref7.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"info-circle\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: function options(_ref8) {\n      var navigation = _ref8.navigation;\n      return {\n        title: 'Search',\n        tabBarIcon: function tabBarIcon(_ref9) {\n          var color = _ref9.color;\n          return React.createElement(TabBarIcon, {\n            name: \"code\",\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 44\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref10) {\n              var pressed = _ref10.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"info-circle\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","HomeScreen","GroupScreen","SearchScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport GroupScreen from '../screens/GroupScreen';\nimport SearchScreen from '../screens/SearchScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={({ navigation }: RootTabScreenProps<'Home'>) => ({\n          title: 'Home',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Group\"\n        component={GroupScreen}\n        options={({ navigation }: RootTabScreenProps<'Group'>) => ({\n          title: 'Group',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n            headerRight: () => (\n                <Pressable\n                    onPress={() => navigation.navigate('Modal')}\n                    style={({ pressed }) => ({\n                        opacity: pressed ? 0.5 : 1,\n                    })}>\n                    <FontAwesome\n                        name=\"info-circle\"\n                        size={25}\n                        color={Colors[colorScheme].text}\n                        style={{ marginRight: 15 }}\n                    />\n                </Pressable>\n            ),\n        })}\n      />\n\n        <BottomTab.Screen\n            name=\"Search\"\n            component={SearchScreen}\n            options={({ navigation }: RootTabScreenProps<'Search'>) => ({\n                title: 'Search',\n                tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n                headerRight: () => (\n                    <Pressable\n                        onPress={() => navigation.navigate('Modal')}\n                        style={({ pressed }) => ({\n                            opacity: pressed ? 0.5 : 1,\n                        })}>\n                        <FontAwesome\n                            name=\"info-circle\"\n                            size={25}\n                            color={Colors[colorScheme].text}\n                            style={{ marginRight: 15 }}\n                        />\n                    </Pressable>\n                ),\n            })}\n        />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}