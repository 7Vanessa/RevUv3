{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuScreen\\\\RevU_v2\\\\navigation\\\\index.tsx\";\nimport { FontAwesome, Ionicons, MaterialIcons, Feather } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport GroupScreen from \"../screens/GroupScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport ProfilScreen from \"../screens/ProfilScreen\";\nimport GroupConversationScreen from \"../screens/GroupConversationScreen\";\nimport QuizzScreen from \"../screens/QuizzScreen\";\nimport MathsGroupScreen from \"../screens/MathsGroupScreen\";\nimport ComputerScienceGroupScreen from \"../screens/ComputerScienceGroupScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport ProfilPicture from \"../components/ProfilPicture\";\nimport users from \"../Data/users\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { auth } from \"../firebase\";\nimport ElecGroupScreen from \"../screens/ElecGroupScreen\";\nimport EnglishGroupScreen from \"../screens/EnglishGroupScreen\";\nimport CommunicationGroupScreen from \"../screens/CommunicationGroupScreen\";\nimport BiologyGroupScreen from \"../screens/BiologyGroupScreen\";\nimport PhysicsGroupScreen from \"../screens/PhysicsGroupScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var navigation = useNavigation();\n\n  var signOut = function signOut() {\n    auth.signOut().then(function () {\n      navigation.navigate(\"Login\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      title: \"RevU\",\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        fontSize: 25\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    options: {\n      title: \"RevU\",\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        fontSize: 25\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"Rev'U\",\n        headerTitleAlign: \"center\",\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 25\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(Ionicons, {\n            name: \"md-home-outline\",\n            color: color,\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 42\n            }\n          });\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Profile');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }\n          }, React.createElement(ProfilPicture, {\n            uri: users[0].profilPicture,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }\n          }));\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: handleSignOut,\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1,\n                marginRight: 15\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }\n          }, React.createElement(Feather, {\n            name: \"power\",\n            size: 24,\n            color: useTheme().colors.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'settings'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfilScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"GroupConversation\",\n    component: GroupConversationScreen,\n    options: function options(_ref6) {\n      var navigation = _ref6.navigation;\n      return {};\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Quiz\",\n    component: QuizzScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MathsGroup\",\n    component: MathsGroupScreen,\n    options: {\n      title: \"Mathematics\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ElecGroup\",\n    component: ElecGroupScreen,\n    options: {\n      title: \"Electronics\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ComputerScience\",\n    component: ComputerScienceGroupScreen,\n    options: {\n      title: \"Computer Sciences\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EnglishGroup\",\n    component: EnglishGroupScreen,\n    options: {\n      title: \"English\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CommunicationGroup\",\n    component: CommunicationGroupScreen,\n    options: {\n      title: \"Communication\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"BiologyGroup\",\n    component: BiologyGroupScreen,\n    options: {\n      title: \"Biology\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PhysicsGroup\",\n    component: PhysicsGroupScreen,\n    options: {\n      title: \"Physics\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var _this2 = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Group\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Group\",\n    component: GroupScreen,\n    options: function options(_ref7) {\n      var navigation = _ref7.navigation;\n      return {\n        title: 'Group',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var color = _ref8.color;\n          return React.createElement(MaterialIcons, {\n            name: \"groups\",\n            color: color,\n            size: 30,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 38\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: function options(_ref9) {\n      var navigation = _ref9.navigation;\n      return {\n        title: 'Search',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref10) {\n          var color = _ref10.color;\n          return React.createElement(Ionicons, {\n            name: \"search\",\n            color: color,\n            size: 26,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 44\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuScreen/RevU_v2/navigation/index.tsx"],"names":["FontAwesome","Ionicons","MaterialIcons","Feather","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","useTheme","useNavigation","createNativeStackNavigator","React","Colors","useColorScheme","NotFoundScreen","LoginScreen","GroupScreen","SearchScreen","ProfilScreen","GroupConversationScreen","QuizzScreen","MathsGroupScreen","ComputerScienceGroupScreen","LinkingConfiguration","ProfilPicture","users","SettingsScreen","auth","ElecGroupScreen","EnglishGroupScreen","CommunicationGroupScreen","BiologyGroupScreen","PhysicsGroupScreen","RegisterScreen","Navigation","colorScheme","Stack","RootNavigator","colors","navigation","signOut","then","navigate","catch","error","alert","message","title","headerTitleAlign","headerTitleStyle","fontWeight","fontSize","BottomTabNavigator","tabBarIcon","color","headerLeft","pressed","opacity","profilPicture","headerRight","handleSignOut","marginRight","text","presentation","BottomTab","tabBarActiveTintColor","tint","headerShown","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["import { FontAwesome, Ionicons, MaterialIcons, Entypo, Feather} from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {NavigationContainer, DefaultTheme, DarkTheme, useTheme, useNavigation} from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport {ColorSchemeName, Pressable, Settings} from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport GroupScreen from '../screens/GroupScreen';\r\nimport SearchScreen from '../screens/SearchScreen';\r\nimport ProfilScreen from '../screens/ProfilScreen';\r\nimport GroupConversationScreen from \"../screens/GroupConversationScreen\";\r\nimport QuizzScreen from '../screens/QuizzScreen';\r\nimport MathsGroupScreen from '../screens/MathsGroupScreen'\r\nimport ComputerScienceGroupScreen from '../screens/ComputerScienceGroupScreen'\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nimport ProfilPicture from \"../components/ProfilPicture\";\r\nimport users from '../Data/users';\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport {auth} from \"../firebase\";\r\nimport ElecGroupScreen from \"../screens/ElecGroupScreen\";\r\nimport EnglishGroupScreen from \"../screens/EnglishGroupScreen\";\r\nimport CommunicationGroupScreen from \"../screens/CommunicationGroupScreen\";\r\nimport BiologyGroupScreen from \"../screens/BiologyGroupScreen\";\r\nimport PhysicsGroupScreen from \"../screens/PhysicsGroupScreen\";\r\nimport RegisterScreen from \"../screens/RegisterScreen\";\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n    const { colors } = useTheme();\r\n    const navigation = useNavigation()\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n                navigation.navigate(\"Login\")\r\n            }).catch(error => alert(error.message))\r\n    }\r\n    \r\n  return (\r\n    <Stack.Navigator>\r\n\r\n        <Stack.Screen name=\"Login\" component={LoginScreen} options={{ title: \"RevU\", headerTitleAlign: \"center\", headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n                fontSize: 25\r\n            }, }} />\r\n\r\n        <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ title: \"RevU\", headerTitleAlign: \"center\", headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n                fontSize: 25\r\n            }, }} />\r\n\r\n      <Stack.Screen\r\n          name=\"Root\"\r\n          component={BottomTabNavigator}\r\n          options={({ navigation }: RootTabScreenProps<'Root'>) => ({\r\n              title: \"Rev'U\",\r\n              headerTitleAlign: \"center\",\r\n              headerTitleStyle: {\r\n                  fontWeight: 'bold',\r\n                  fontSize: 25\r\n              },\r\n              tabBarIcon: ({ color }) => <Ionicons name=\"md-home-outline\" color={color} size={26} />,\r\n              headerLeft: () => (\r\n                  <Pressable\r\n                      onPress={() => navigation.navigate('Profile')}\r\n                      style={({ pressed }) => ({\r\n                          opacity: pressed ? 0.5 : 1,\r\n                      })}>\r\n                      <ProfilPicture uri={users[0].profilPicture} />\r\n                  </Pressable>\r\n              ),\r\n              headerRight: () => (\r\n                  <Pressable\r\n                      onPress={handleSignOut}\r\n                      style={({ pressed }) => ({\r\n                          opacity: pressed ? 0.5 : 1, marginRight: 15\r\n                      })}>\r\n                      <Feather name=\"power\" size={24} color={useTheme().colors.text} />\r\n                  </Pressable>\r\n              )\r\n          })}\r\n      />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n      <Stack.Group screenOptions={{ presentation: 'settings' }}>\r\n          <Stack.Screen\r\n              name=\"Profile\"\r\n              component={ProfilScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n              name=\"GroupConversation\"\r\n              component={GroupConversationScreen}\r\n              options={({ navigation }: RootTabScreenProps<'GroupConversation'>) => ({\r\n          })}\r\n          />\r\n\r\n          <Stack.Screen\r\n              name=\"Quiz\"\r\n              component={QuizzScreen}\r\n          />\r\n\r\n          <Stack.Screen\r\n              name=\"Settings\"\r\n              component={SettingsScreen}\r\n          />\r\n          <Stack.Screen\r\n              name=\"MathsGroup\"\r\n              component={MathsGroupScreen}\r\n              options = {{title: \"Mathematics\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"ElecGroup\"\r\n              component={ElecGroupScreen}\r\n              options = {{title: \"Electronics\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"ComputerScience\"\r\n              component={ComputerScienceGroupScreen}\r\n              options = {{title: \"Computer Sciences\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"EnglishGroup\"\r\n              component={EnglishGroupScreen}\r\n              options = {{title: \"English\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"CommunicationGroup\"\r\n              component={CommunicationGroupScreen}\r\n              options = {{title: \"Communication\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"BiologyGroup\"\r\n              component={BiologyGroupScreen}\r\n              options = {{title: \"Biology\"}}\r\n          />\r\n          <Stack.Screen\r\n              name=\"PhysicsGroup\"\r\n              component={PhysicsGroupScreen}\r\n              options = {{title: \"Physics\"}}\r\n          />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Group\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}>\r\n      <BottomTab.Screen\r\n        name=\"Group\"\r\n        component={GroupScreen}\r\n        options={({ navigation }: RootTabScreenProps<'Group'>) => ({\r\n          title: 'Group',\r\n            headerShown: false,\r\n          tabBarIcon: ({ color }) => <MaterialIcons name=\"groups\" color={color} size={30} />\r\n        })}\r\n      />\r\n\r\n        <BottomTab.Screen\r\n            name=\"Search\"\r\n            component={SearchScreen}\r\n            options={({ navigation }: RootTabScreenProps<'Search'>) => ({\r\n                title: 'Search',\r\n                headerShown: false,\r\n                tabBarIcon: ({ color }) => <Ionicons name=\"search\" color={color} size={26} />\r\n            })}\r\n        />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>['name'];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}