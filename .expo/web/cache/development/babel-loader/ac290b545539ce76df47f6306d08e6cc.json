{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuv3\\\\RevU_v2\\\\components\\\\InputBox\\\\index.tsx\";\nimport { Entypo, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nexport default function InputBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onMicPress = function onMicPress() {\n    console.warn('mic');\n  };\n\n  var onSendPress = function onSendPress() {\n    console.warn(\"Sending: \" + message);\n    setMessage('');\n  };\n\n  var onPress = function onPress() {\n    if (!message) {\n      onMicPress();\n    } else {\n      onSendPress();\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"laugh-beam\",\n    size: 24,\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    multiline: true,\n    scrollEnabled: true,\n    placeholder: \"Taper message\",\n    value: message,\n    onChangeText: setMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), React.createElement(Entypo, {\n    name: \"attachment\",\n    size: 24,\n    color: \"grey\",\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), !message && React.createElement(Fontisto, {\n    name: \"camera\",\n    size: 24,\n    color: \"grey\",\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, !message ? React.createElement(MaterialCommunityIcons, {\n    name: \"microphone\",\n    size: 26,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }) : React.createElement(MaterialIcons, {\n    name: \"send\",\n    size: 26,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuv3/RevU_v2/components/InputBox/index.tsx"],"names":["Entypo","FontAwesome5","Fontisto","MaterialCommunityIcons","MaterialIcons","React","useState","styles","InputBox","message","setMessage","onMicPress","console","warn","onSendPress","onPress","container","mainContainer","textInput","icons","buttonContainer"],"mappings":";;AAAA,SAASA,MAAT,EAA8BC,YAA9B,EAA4CC,QAA5C,EAAsDC,sBAAtD,EAA8EC,aAA9E,QAAmG,oBAAnG;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,MAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B,kBAA8BF,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAa,KAAb;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBF,IAAAA,OAAO,CAACC,IAAR,eAAyBJ,OAAzB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD;;AAKA,MAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAG,CAACN,OAAJ,EAAa;AACTE,MAAAA,UAAU;AACb,KAFD,MAGK;AACDG,MAAAA,WAAW;AACd;AACJ,GAPD;;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,IAAI,EAAE,EAAtC;AAA0C,IAAA,KAAK,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEV,MAAM,CAACW,SADlB;AAEI,IAAA,SAAS,EAAE,IAFf;AAGI,IAAA,aAAa,EAAE,IAHnB;AAII,IAAA,WAAW,EAAE,eAJjB;AAKI,IAAA,KAAK,EAAET,OALX;AAMI,IAAA,YAAY,EAAEC,UANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,MAA1C;AAAiD,IAAA,KAAK,EAAEH,MAAM,CAACY,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWK,CAACV,OAAD,IAAY,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAEF,MAAM,CAACY,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXjB,CADJ,EAeI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACa,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACX,OAAD,GACG,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,YAA7B;AAA0C,IAAA,IAAI,EAAE,EAAhD;AAAoD,IAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ,CAfJ,CADJ;AA0BH","sourcesContent":["import { Entypo, FontAwesome, FontAwesome5, Fontisto, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport styles from './styles';\r\n\r\nexport default function InputBox() {\r\n\r\n    const [message, setMessage] = useState('') ;\r\n\r\n    const onMicPress = () => {\r\n        console.warn('mic');\r\n    }\r\n\r\n    const onSendPress = () => {\r\n        console.warn(`Sending: ${message}`);\r\n        setMessage('');\r\n    }\r\n\r\n    const onPress = () => {\r\n        if(!message) {\r\n            onMicPress();\r\n        }\r\n        else {\r\n            onSendPress();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.mainContainer}>\r\n                <FontAwesome5 name=\"laugh-beam\" size={24} color='grey' />\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    multiline={true}\r\n                    scrollEnabled={true}\r\n                    placeholder={\"Taper message\"}\r\n                    value={message}\r\n                    onChangeText={setMessage}\r\n                />\r\n                <Entypo name=\"attachment\" size={24} color='grey' style={styles.icons} />\r\n                {!message && <Fontisto name=\"camera\" size={24} color='grey' style={styles.icons} />}\r\n            </View>\r\n\r\n            <TouchableOpacity onPress={onPress} >\r\n                <View style={styles.buttonContainer}>\r\n                    {!message ?\r\n                        <MaterialCommunityIcons name=\"microphone\" size={26} color='white' /> :\r\n                        <MaterialIcons name=\"send\" size={26} color='white' />}\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}