{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\screens\\\\SearchScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Difficulty, fetchQuestions } from \"../API\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { useTheme } from \"@react-navigation/native\";\nvar TOTAL_QUESTIONS = 10;\nexport default function SearchScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      points = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chargement = _useState6[0],\n      setChargement = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      termine = _useState8[0],\n      setTermine = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userAnswers = _useState10[0],\n      setUserAnswers = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      numero = _useState12[0],\n      setNumero = _useState12[1];\n\n  console.log(questions);\n\n  var validateAnswer = function validateAnswer(e) {};\n\n  var nextQuestion = function nextQuestion() {};\n\n  var startQuiz = function startQuiz() {\n    var nouvellesQuestions;\n    return _regeneratorRuntime.async(function startQuiz$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setChargement(true);\n            setTermine(false);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetchQuestions(TOTAL_QUESTIONS, Difficulty.FACILE));\n\n          case 4:\n            nouvellesQuestions = _context.sent;\n            setQuestions(nouvellesQuestions);\n            setPoints(0);\n            setUserAnswers([]);\n            setNumero(0);\n            setChargement(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Quiz\"), termine || userAnswers.length === TOTAL_QUESTIONS ? React.createElement(\"button\", {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Commencer\") : null, !termine ? React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Points : \") : null, chargement && React.createElement(AntDesign, {\n    name: \"loading1\",\n    size: 24,\n    color: useTheme().colors.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }\n  }), !chargement && !termine && React.createElement(QuestionCard, {\n    numQuestion: numero + 1,\n    totalQuestions: TOTAL_QUESTIONS,\n    question: questions[numero].question,\n    answers: questions[numero].answers,\n    userAnswer: userAnswers ? userAnswers[numero] : undefined,\n    callback: validateAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 43\n    }\n  }), React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Suivant\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  points: {},\n  commencer: {},\n  suivant: {}\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/screens/SearchScreen.tsx"],"names":["React","useState","Difficulty","fetchQuestions","AntDesign","useTheme","TOTAL_QUESTIONS","SearchScreen","questions","setQuestions","points","setPoints","chargement","setChargement","termine","setTermine","userAnswers","setUserAnswers","numero","setNumero","console","log","validateAnswer","e","nextQuestion","startQuiz","FACILE","nouvellesQuestions","styles","container","length","colors","text","question","answers","undefined","StyleSheet","create","backgroundColor","commencer","suivant"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {Difficulty, fetchQuestions, StateQuestion} from \"../API\";\r\n\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport {useTheme} from \"@react-navigation/native\";\r\n\r\ntype ObjectAnswer = {\r\n    question: string;\r\n    answer: string;\r\n    correct: boolean;\r\n    correct_answer: string;\r\n}\r\n\r\nconst TOTAL_QUESTIONS = 10\r\n\r\nexport default function SearchScreen() {\r\n\r\n    const [questions, setQuestions] = useState<StateQuestion[]>([])\r\n    const [points, setPoints] = useState(0)\r\n    const [chargement, setChargement] = useState(false)\r\n    const [termine, setTermine] = useState(true)\r\n    const [userAnswers, setUserAnswers] = useState<ObjectAnswer[]>([])\r\n    const [numero, setNumero] = useState(0)\r\n\r\n    console.log(questions)\r\n\r\n    const validateAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n\r\n    }\r\n\r\n    const startQuiz = async () => {\r\n        setChargement(true)\r\n        setTermine(false)\r\n\r\n        const nouvellesQuestions = await fetchQuestions(TOTAL_QUESTIONS, Difficulty.FACILE)\r\n\r\n        setQuestions(nouvellesQuestions)\r\n        setPoints(0)\r\n        setUserAnswers([])\r\n        setNumero(0)\r\n\r\n        setChargement(false)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <p>Quiz</p>\r\n            {termine || userAnswers.length === TOTAL_QUESTIONS ? (\r\n                <button onClick={startQuiz}>Commencer</button>) : null}\r\n            {!termine ? <p>Points : </p>: null}\r\n            {chargement && <AntDesign name=\"loading1\" size={24} color={useTheme().colors.text} />}\r\n            {!chargement && !termine &&  (<QuestionCard numQuestion={numero + 1} totalQuestions={TOTAL_QUESTIONS}\r\n                           question={questions[numero].question} answers={questions[numero].answers}\r\n                           userAnswer={userAnswers ? userAnswers[numero] : undefined} callback={validateAnswer}/>)}\r\n            <button onClick={nextQuestion}>Suivant</button>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'white'\r\n    },\r\n\r\n    points: {\r\n\r\n    },\r\n\r\n    commencer: {\r\n\r\n    },\r\n\r\n    suivant: {\r\n\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}