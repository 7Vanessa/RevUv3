{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuv3\\\\RevU_v2\\\\screens\\\\LoginScreen.tsx\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nexport default function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"Root\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"RevU\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleLogin,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: handleSignUp,\n    style: [styles.button, styles.buttonOutline],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutlineText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Register\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    height: '100%'\n  },\n  titre: {\n    fontSize: 40,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginBottom: 150\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuv3/RevU_v2/screens/LoginScreen.tsx"],"names":["useNavigation","React","useEffect","useState","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","navigate","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","titre","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","height","fontSize","textAlign","fontWeight","marginBottom","width","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { auth } from '../firebase'\r\n\r\nexport default function LoginScreen() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const navigation = useNavigation()\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if(user) {\r\n                navigation.navigate(\"Root\")\r\n            }\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const handleSignUp = () => {\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user;\r\n                console.log('Registered with:', user.email);\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user;\r\n                console.log('Logged in with:', user.email);\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={styles.container}\r\n            behavior=\"padding\"\r\n        >\r\n            <Text style={styles.titre}>RevU</Text>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                    style={styles.input}\r\n                />\r\n                <TextInput\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                    style={styles.input}\r\n                    secureTextEntry\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity\r\n                    onPress={handleLogin}\r\n                    style={styles.button}\r\n                >\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    onPress={handleSignUp}\r\n                    style={[styles.button, styles.buttonOutline]}\r\n                >\r\n                    <Text style={styles.buttonOutlineText}>Register</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        height: '100%'\r\n    },\r\n    titre: {\r\n      fontSize: 40,\r\n      textAlign: 'center',\r\n      fontWeight: 'bold',\r\n        marginBottom: 150\r\n    },\r\n    inputContainer: {\r\n        width: '80%'\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n        marginTop: 5,\r\n    },\r\n    buttonContainer: {\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    button: {\r\n        backgroundColor: '#0782F9',\r\n        width: '100%',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n    },\r\n    buttonOutline: {\r\n        backgroundColor: 'white',\r\n        marginTop: 5,\r\n        borderColor: '#0782F9',\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n    buttonOutlineText: {\r\n        color: '#0782F9',\r\n        fontWeight: '700',\r\n        fontSize: 16,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}