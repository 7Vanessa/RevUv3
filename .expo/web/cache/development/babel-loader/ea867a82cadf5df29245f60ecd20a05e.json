{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuScreen\\\\RevU_v2\\\\screens\\\\MathsGroupScreen.tsx\";\nimport React, { useCallback, useLayoutEffect, useState } from 'react';\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport { auth, db } from \"../firebase\";\nexport default function MathsGroupScreen() {\n  var _auth$currentUser, _auth$currentUser2, _auth$currentUser3;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useLayoutEffect(function () {\n    db.collection('maths').orderBy('createdAt', 'desc').onSnapshot(function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          _id: doc.data()._id,\n          createdAt: doc.data().createdAt,\n          text: doc.data().createdAt,\n          user: user\n        };\n      }));\n    });\n  });\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n        _id = _messages$._id,\n        createdAt = _messages$.createdAt,\n        text = _messages$.text,\n        user = _messages$.user;\n    db.collection('maths').add({\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email,\n      name: (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.displayName,\n      avatar: (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.photoURL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuScreen/RevU_v2/screens/MathsGroupScreen.tsx"],"names":["React","useCallback","useLayoutEffect","useState","GiftedChat","auth","db","MathsGroupScreen","messages","setMessages","collection","orderBy","onSnapshot","snapshot","docs","map","doc","_id","data","createdAt","text","user","onSend","previousMessages","append","add","currentUser","email","name","displayName","avatar","photoURL"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAAuCC,eAAvC,EAAwDC,QAAxD,QAAuE,OAAvE;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,IAAR,EAAcC,EAAd;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAiBAP,EAAAA,eAAe,CAAC,YAAM;AAClBI,IAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,OAAvB,CAA+B,WAA/B,EAA4C,MAA5C,EAAoDC,UAApD,CAA+D,UAAAC,QAAQ;AAAA,aAAIJ,WAAW,CAClFI,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG;AAAA,eAAK;AACtBC,UAAAA,GAAG,EAAED,GAAG,CAACE,IAAJ,GAAWD,GADM;AAEtBE,UAAAA,SAAS,EAAEH,GAAG,CAACE,IAAJ,GAAWC,SAFA;AAGtBC,UAAAA,IAAI,EAAEJ,GAAG,CAACE,IAAJ,GAAWC,SAHK;AAItBE,UAAAA,IAAI,EAAJA;AAJsB,SAAL;AAAA,OAArB,CADkF,CAAf;AAAA,KAAvE;AAQH,GATc,CAAf;;AAWA,MAAMC,OAAM,GAAGrB,WAAW,CAAC,YAAmB;AAAA,QAAlBO,QAAkB,uEAAP,EAAO;AAC1CC,IAAAA,WAAW,CAAC,UAAAc,gBAAgB;AAAA,aAAInB,UAAU,CAACoB,MAAX,CAAkBD,gBAAlB,EAAoCf,QAApC,CAAJ;AAAA,KAAjB,CAAX;AACA,qBAKIA,QAAQ,CAAC,CAAD,CALZ;AAAA,QACIS,GADJ,cACIA,GADJ;AAAA,QAEIE,SAFJ,cAEIA,SAFJ;AAAA,QAGIC,IAHJ,cAGIA,IAHJ;AAAA,QAIIC,IAJJ,cAIIA,IAJJ;AAMAf,IAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBe,GAAvB,CAA2B;AACvBR,MAAAA,GAAG,EAAHA,GADuB;AAEvBE,MAAAA,SAAS,EAATA,SAFuB;AAGvBC,MAAAA,IAAI,EAAJA,IAHuB;AAIvBC,MAAAA,IAAI,EAAJA;AAJuB,KAA3B;AAMH,GAdyB,EAcvB,EAduB,CAA1B;;AAgBA,SACI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEb,QAAtB;AACY,IAAA,yBAAyB,EAAE,IADvC;AAEY,IAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,aAAIc,OAAM,CAACd,QAAD,CAAV;AAAA,KAF5B;AAGY,IAAA,IAAI,EAAE;AAACS,MAAAA,GAAG,uBAAEZ,IAAI,CAACqB,WAAP,qBAAE,kBAAkBC,KAAxB;AACFC,MAAAA,IAAI,wBAAEvB,IAAI,CAACqB,WAAP,qBAAE,mBAAkBG,WADtB;AAEFC,MAAAA,MAAM,wBAAEzB,IAAI,CAACqB,WAAP,qBAAE,mBAAkBK;AAFxB,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH","sourcesContent":["import React, {useCallback, useEffect, useLayoutEffect, useState} from 'react'\r\nimport {View} from \"react-native\";\r\nimport {GiftedChat} from \"react-native-gifted-chat\";\r\nimport {auth, db} from \"../firebase\";\r\n\r\nexport default function MathsGroupScreen() {\r\n    const [messages, setMessages] = useState([])\r\n\r\n    /*useEffect(() => {\r\n        setMessages([\r\n            {\r\n                _id: 1,\r\n                text: 'Hello hi',\r\n                createdAt: new Date(),\r\n                user: {\r\n                    _id: 2,\r\n                    name: 'React Native',\r\n                    avatar: \"https://zupimages.net/up/22/01/nu7y.jpeg\",\r\n                },\r\n            },\r\n        ])\r\n    }, [])*/\r\n\r\n    useLayoutEffect(() => {\r\n        db.collection('maths').orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\r\n            snapshot.docs.map(doc => ({\r\n                _id: doc.data()._id,\r\n                createdAt: doc.data().createdAt,\r\n                text: doc.data().createdAt,\r\n                user\r\n            }))\r\n        ))\r\n    })\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n        const {\r\n            _id,\r\n            createdAt,\r\n            text,\r\n            user\r\n        } = messages[0]\r\n        db.collection('maths').add({\r\n            _id,\r\n            createdAt,\r\n            text,\r\n            user\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <GiftedChat messages={messages}\r\n                    showAvatarForEveryMessage={true}\r\n                    onSend={messages => onSend(messages)}\r\n                    user={{_id: auth.currentUser?.email,\r\n                        name: auth.currentUser?.displayName,\r\n                        avatar: auth.currentUser?.photoURL\r\n        }}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}