{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuv3\\\\RevU_v2\\\\screens\\\\MathsGroupScreen.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { View } from \"../components/Themed\";\nimport { auth } from \"../firebase\";\nimport { useEffect, useState } from \"react\";\nvar firestore = firebase.firestore;\nexport default function MathsGroupScreen() {\n  var _auth$currentUser,\n      _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageList = _useState2[0],\n      setMessageList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isJoined = _useState6[0],\n      setIsJoined = _useState6[1];\n\n  var userID = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n  useEffect(function () {\n    getMessages();\n  }, []);\n\n  function getMessages() {\n    var db = firestore;\n    var messages = [];\n    db.collection(\"message\").doc(item.groupID).collection(\"messages\").onSnapshot(function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        if (change.type === \"added\") {\n          console.log(\"New Message: \", change.doc.data());\n          messages.push(change.doc.data());\n        }\n\n        if (change.type === \"modified\") {\n          console.log(\"Modified Message\", change.doc.data());\n        }\n\n        if (change.type === \"removed\") {\n          console.log(\"Removed Message:\", change.doc.data());\n        }\n\n        setMessageList(messages);\n      });\n    });\n  }\n\n  function sendMessagesToChat() {\n    var _auth$currentUser2;\n\n    var messageRef = firestore.collection(\"message\").doc(item.groupID).collection(\"messages\").doc();\n    var userEmail = (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email;\n    messageRef.set({\n      messageID: messageRef.id,\n      message: message,\n      senderId: userID,\n      senderEmail: userEmail\n    }).then(function (docRef) {\n      console.log(\"Document written with ID: \", messageRef.id);\n      setMessage('');\n    }).catch(function (error) {\n      alert(error.message);\n      console.log(\"Error:\", error);\n    });\n  }\n\n  return React.createElement(DismissKeyboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    behavior: \"padding\",\n    enabled: true,\n    keyboardVerticalOffset: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    style: styles.flatList,\n    data: messageList,\n    keyExtractor: function keyExtractor(item, index) {\n      return 'key' + index;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, React.createElement(MessageItem, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.messageFieldView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(MessageFieldView, {\n    term: message,\n    placeHolder: Strings.typeYourMessage,\n    onTermChange: function onTermChange(message) {\n      return setMessage(message);\n    },\n    onSubmit: sendMessagesToChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  flatList: {\n    marginBottom: 10,\n    flex: 0.9\n  },\n  messageFieldView: {\n    flex: 0.1\n  }\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuv3/RevU_v2/screens/MathsGroupScreen.tsx"],"names":["React","View","auth","useEffect","useState","firestore","firebase","MathsGroupScreen","messageList","setMessageList","message","setMessage","isJoined","setIsJoined","userID","currentUser","uid","getMessages","db","messages","collection","doc","item","groupID","onSnapshot","snapshot","docChanges","forEach","change","type","console","log","data","push","sendMessagesToChat","messageRef","userEmail","email","set","messageID","id","senderId","senderEmail","then","docRef","catch","error","alert","flex","flexDirection","justifyContent","styles","container","flatList","index","messageFieldView","Strings","typeYourMessage","StyleSheet","create","alignItems","marginBottom"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAKA,SAAeC,IAAf;AAGA,SAAQC,IAAR;AAEA,SAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;IACOC,S,GAAYC,Q,CAASD,S;AAE5B,eAAe,SAASE,gBAAT,GAA4B;AAAA;AAAA;;AACvC,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8BL,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCP,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,MAAM,wBAAGZ,IAAI,CAACa,WAAR,qBAAG,kBAAkBC,GAAjC;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACnB,QAAMC,EAAE,GAAGb,SAAX;AACA,QAAIc,QAAQ,GAAG,EAAf;AAEAD,IAAAA,EAAE,CAACE,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BC,IAAI,CAACC,OAAlC,EAA2CH,UAA3C,CAAsD,UAAtD,EACKI,UADL,CACgB,UAAUC,QAAV,EAAoB;AAC5BA,MAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8B,UAAUC,MAAV,EAAkB;AAC5C,YAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAAM,CAACP,GAAP,CAAWW,IAAX,EAA7B;AACAb,UAAAA,QAAQ,CAACc,IAAT,CAAcL,MAAM,CAACP,GAAP,CAAWW,IAAX,EAAd;AAEH;;AACD,YAAIJ,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,MAAM,CAACP,GAAP,CAAWW,IAAX,EAAhC;AACH;;AACD,YAAIJ,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,MAAM,CAACP,GAAP,CAAWW,IAAX,EAAhC;AACH;;AACDvB,QAAAA,cAAc,CAACU,QAAD,CAAd;AACH,OAbD;AAcH,KAhBL;AAiBH;;AAED,WAASe,kBAAT,GAA8B;AAAA;;AAC1B,QAAMC,UAAU,GAAG9B,SAAS,CAACe,UAAV,CAAqB,SAArB,EAAgCC,GAAhC,CAAoCC,IAAI,CAACC,OAAzC,EAAkDH,UAAlD,CAA6D,UAA7D,EAAyEC,GAAzE,EAAnB;AACA,QAAMe,SAAS,yBAAGlC,IAAI,CAACa,WAAR,qBAAG,mBAAkBsB,KAApC;AAEAF,IAAAA,UAAU,CAACG,GAAX,CAAe;AACXC,MAAAA,SAAS,EAAEJ,UAAU,CAACK,EADX;AAEX9B,MAAAA,OAAO,EAAEA,OAFE;AAGX+B,MAAAA,QAAQ,EAAE3B,MAHC;AAIX4B,MAAAA,WAAW,EAAEN;AAJF,KAAf,EAKGO,IALH,CAKQ,UAAUC,MAAV,EAAkB;AACtBd,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,UAAU,CAACK,EAArD;AACA7B,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KARD,EAQGkC,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,KAAK,CAACD,KAAK,CAACpC,OAAP,CAAL;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,KAAtB;AACH,KAXD;AAaH;;AAED,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,aAAa,EAAE,QAA1B;AAAoCC,MAAAA,cAAc,EAAE;AAApD,KAA7B;AACsB,IAAA,QAAQ,EAAC,SAD/B;AACyC,IAAA,OAAO,MADhD;AACiD,IAAA,sBAAsB,EAAE,GADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,QADlB;AAEI,IAAA,IAAI,EAAE7C,WAFV;AAGI,IAAA,YAAY,EAAE,sBAACc,IAAD,EAAOgC,KAAP;AAAA,aAAiB,QAAQA,KAAzB;AAAA,KAHlB;AAII,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXhC,IAAW,QAAXA,IAAW;AACtB,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,mBAAM,CAEhC,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAiBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6B,MAAM,CAACI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE7C,OAAxB;AACkB,IAAA,WAAW,EAAE8C,OAAO,CAACC,eADvC;AAEkB,IAAA,YAAY,EAAE,sBAAA/C,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,CAAd;AAAA,KAFvC;AAGkB,IAAA,QAAQ,EAAEwB,kBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CAFJ,CADJ,CADJ;AAwCH;AAGD,IAAMiB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPH,IAAAA,aAAa,EAAE,QADR;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPU,IAAAA,UAAU,EAAE,QAHL;AAIPZ,IAAAA,IAAI,EAAE;AAJC,GADkB;AAO7BK,EAAAA,QAAQ,EAAE;AACNQ,IAAAA,YAAY,EAAE,EADR;AAENb,IAAAA,IAAI,EAAE;AAFA,GAPmB;AAW7BO,EAAAA,gBAAgB,EAAE;AACdP,IAAAA,IAAI,EAAE;AADQ;AAXW,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, TextInput, TouchableOpacity} from 'react-native';\r\n\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\n\r\nimport { Text, View } from '../components/Themed';\r\n\r\nimport {useNavigation, useRoute} from \"@react-navigation/native\";\r\nimport {auth} from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport firestore = firebase.firestore;\r\n\r\nexport default function MathsGroupScreen() {\r\n    const [messageList, setMessageList] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    const [isJoined, setIsJoined] = useState(false)\r\n\r\n    const userID = auth.currentUser?.uid\r\n\r\n    useEffect(() => {\r\n        getMessages()\r\n    }, [])\r\n\r\n    function getMessages() {\r\n        const db = firestore\r\n        var messages = []\r\n\r\n        db.collection(\"message\").doc(item.groupID).collection(\"messages\")\r\n            .onSnapshot(function (snapshot) {\r\n                snapshot.docChanges().forEach(function (change) {\r\n                    if (change.type === \"added\") {\r\n                        console.log(\"New Message: \", change.doc.data())\r\n                        messages.push(change.doc.data())\r\n\r\n                    }\r\n                    if (change.type === \"modified\") {\r\n                        console.log(\"Modified Message\", change.doc.data())\r\n                    }\r\n                    if (change.type === \"removed\") {\r\n                        console.log(\"Removed Message:\", change.doc.data())\r\n                    }\r\n                    setMessageList(messages)\r\n                })\r\n            })\r\n    }\r\n\r\n    function sendMessagesToChat() {\r\n        const messageRef = firestore.collection(\"message\").doc(item.groupID).collection(\"messages\").doc()\r\n        const userEmail = auth.currentUser?.email\r\n\r\n        messageRef.set({\r\n            messageID: messageRef.id,\r\n            message: message,\r\n            senderId: userID,\r\n            senderEmail: userEmail\r\n        }).then(function (docRef) {\r\n            console.log(\"Document written with ID: \", messageRef.id)\r\n            setMessage('')\r\n        }).catch(function (error) {\r\n            alert(error.message)\r\n            console.log(\"Error:\", error)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <DismissKeyboard>\r\n            <KeyboardAvoidingView style={{ flex: 1, flexDirection: 'column', justifyContent: 'center', }}\r\n                                  behavior=\"padding\" enabled keyboardVerticalOffset={100}>\r\n                <View style={styles.container}>\r\n                    <FlatList\r\n                        style={styles.flatList}\r\n                        data={messageList}\r\n                        keyExtractor={(item, index) => 'key' + index}\r\n                        renderItem={({ item }) => {\r\n                            return (\r\n                                <TouchableOpacity onPress={() => {\r\n\r\n                                }}>\r\n\r\n                                    <MessageItem item={item} />\r\n                                </TouchableOpacity>\r\n                            )\r\n                        }}\r\n                    />\r\n\r\n                    <View style={styles.messageFieldView}>\r\n                        <MessageFieldView term={message}\r\n                                          placeHolder={Strings.typeYourMessage}\r\n                                          onTermChange={message => setMessage(message)}\r\n                                          onSubmit={sendMessagesToChat}\r\n                        >\r\n\r\n                        </MessageFieldView>\r\n\r\n                    </View>\r\n\r\n\r\n\r\n                </View>\r\n\r\n            </KeyboardAvoidingView>\r\n\r\n        </DismissKeyboard>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flex: 1\r\n    },\r\n    flatList: {\r\n        marginBottom: 10,\r\n        flex: 0.9,\r\n    },\r\n    messageFieldView: {\r\n        flex: 0.1\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}