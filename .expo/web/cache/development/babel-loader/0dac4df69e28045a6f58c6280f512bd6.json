{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\navigation\\\\index.tsx\";\nimport { FontAwesome, Ionicons, MaterialIcons, Entypo } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport GroupScreen from \"../screens/GroupScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport ProfilScreen from \"../screens/ProfilScreen\";\nimport GroupConversationScreen from \"../screens/GroupConversationScreen\";\nimport ChooseParticipantsScreen from \"../screens/ChooseParticipantsScreen\";\nimport QuizzScreen from \"../screens/QuizzScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport ProfilPicture from \"../components/ProfilPicture\";\nimport users from \"../Data/users\";\nimport ThemesScreen from \"../screens/ThemesScreen\";\nimport CreateThemeScreen from \"../screens/CreateThemeScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"Rev'U\",\n        headerTitleAlign: \"center\",\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 25\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(Ionicons, {\n            name: \"md-home-outline\",\n            color: color,\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 42\n            }\n          });\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Profil');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }\n          }, React.createElement(ProfilPicture, {\n            uri: users[0].profilPicture,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }\n          }));\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Settings');\n            },\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }\n          }, React.createElement(Ionicons, {\n            name: \"settings-outline\",\n            size: 28,\n            color: colors.text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'settings'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profil\",\n    component: ProfilScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"GroupConversation\",\n    component: GroupConversationScreen,\n    options: function options(_ref6) {\n      var navigation = _ref6.navigation;\n      return {\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Quiz');\n            },\n            style: function style(_ref7) {\n              var pressed = _ref7.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }\n          }, React.createElement(Entypo, {\n            name: \"list\",\n            size: 28,\n            color: colors.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Themes\",\n    component: ThemesScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChooseParticipants\",\n    component: ChooseParticipantsScreen,\n    options: {\n      title: \"Choose Participants\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateTheme\",\n    component: CreateThemeScreen,\n    options: {\n      title: \"Create Theme\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Quiz\",\n    component: QuizzScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var _this2 = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref8) {\n      var navigation = _ref8.navigation;\n      return {\n        title: 'Home',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref9) {\n          var color = _ref9.color;\n          return React.createElement(Ionicons, {\n            name: \"md-home-outline\",\n            color: color,\n            size: 26,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 38\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Group\",\n    component: GroupScreen,\n    options: function options(_ref10) {\n      var navigation = _ref10.navigation;\n      return {\n        title: 'Group',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref11) {\n          var color = _ref11.color;\n          return React.createElement(MaterialIcons, {\n            name: \"groups\",\n            color: color,\n            size: 30,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 38\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: function options(_ref12) {\n      var navigation = _ref12.navigation;\n      return {\n        title: 'Search',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref13) {\n          var color = _ref13.color;\n          return React.createElement(Ionicons, {\n            name: \"search\",\n            color: color,\n            size: 26,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 44\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/navigation/index.tsx"],"names":["FontAwesome","Ionicons","MaterialIcons","Entypo","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","useTheme","createNativeStackNavigator","React","Colors","useColorScheme","NotFoundScreen","SettingsScreen","HomeScreen","GroupScreen","SearchScreen","ProfilScreen","GroupConversationScreen","ChooseParticipantsScreen","QuizzScreen","LinkingConfiguration","ProfilPicture","users","ThemesScreen","CreateThemeScreen","Navigation","colorScheme","Stack","RootNavigator","colors","BottomTabNavigator","navigation","title","headerTitleAlign","headerTitleStyle","fontWeight","fontSize","tabBarIcon","color","headerLeft","navigate","pressed","opacity","profilPicture","headerRight","text","marginRight","presentation","BottomTab","tabBarActiveTintColor","tint","headerShown","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["import { FontAwesome, Ionicons, MaterialIcons, Entypo} from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport {ColorSchemeName, Pressable, Settings} from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport ModalScreen from '../screens/ModalScreen';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport GroupScreen from '../screens/GroupScreen';\r\nimport SearchScreen from '../screens/SearchScreen';\r\nimport ProfilScreen from '../screens/ProfilScreen';\r\nimport GroupConversationScreen from \"../screens/GroupConversationScreen\";\r\nimport ChooseParticipantsScreen from \"../screens/ChooseParticipantsScreen\";\r\nimport QuizzScreen from '../screens/QuizzScreen';\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nimport ProfilPicture from \"../components/ProfilPicture\";\r\nimport users from '../Data/users';\r\nimport ThemesScreen from \"../screens/ThemesScreen\";\r\nimport CreateThemeScreen from \"../screens/CreateThemeScreen\";\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n    const { colors } = useTheme();\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n          name=\"Root\"\r\n          component={BottomTabNavigator}\r\n          options={({ navigation }: RootTabScreenProps<'Root'>) => ({\r\n              title: \"Rev'U\",\r\n              headerTitleAlign: \"center\",\r\n              headerTitleStyle: {\r\n                  fontWeight: 'bold',\r\n                  fontSize: 25\r\n              },\r\n              tabBarIcon: ({ color }) => <Ionicons name=\"md-home-outline\" color={color} size={26} />,\r\n              headerLeft: () => (\r\n                  <Pressable\r\n                      onPress={() => navigation.navigate('Profil')}\r\n                      style={({ pressed }) => ({\r\n                          opacity: pressed ? 0.5 : 1,\r\n                      })}>\r\n                      <ProfilPicture uri={users[0].profilPicture} />\r\n                  </Pressable>\r\n              ),\r\n              headerRight: () => (\r\n                  <Pressable\r\n                      onPress={() => navigation.navigate('Settings')}\r\n                      style={({ pressed }) => ({\r\n                          opacity: pressed ? 0.5 : 1,\r\n                      })}>\r\n                      <Ionicons\r\n                          name=\"settings-outline\"\r\n                          size={28}\r\n                          color={colors.text}\r\n                          style={{ marginRight: 15 }}\r\n                      />\r\n                  </Pressable>\r\n              ),\r\n          })}\r\n      />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n      <Stack.Group screenOptions={{ presentation: 'settings' }}>\r\n          <Stack.Screen name=\"Settings\" component={SettingsScreen} />\r\n          <Stack.Screen name=\"Profil\" component={ProfilScreen} />\r\n          <Stack.Screen\r\n              name=\"GroupConversation\"\r\n              component={GroupConversationScreen}\r\n              options={({ navigation }: RootTabScreenProps<'GroupConversation'>) => ({\r\n              headerRight: () => (\r\n                <Pressable\r\n                    onPress={() => navigation.navigate('Quiz')}\r\n                    style={({ pressed }) => ({\r\n                        opacity: pressed ? 0.5 : 1,\r\n                    })}>\r\n                    <Entypo name=\"list\" size={28} color={colors.text} />\r\n                </Pressable>\r\n            ),\r\n          })}\r\n          />\r\n          <Stack.Screen\r\n              name=\"Themes\"\r\n              component={ThemesScreen}\r\n          />\r\n          <Stack.Screen\r\n              name=\"ChooseParticipants\"\r\n              component={ChooseParticipantsScreen}\r\n              options={{\r\n                  title: \"Choose Participants\"\r\n              }}\r\n          />\r\n          <Stack.Screen\r\n              name=\"CreateTheme\"\r\n              component={CreateThemeScreen}\r\n              options={{\r\n                  title: \"Create Theme\"\r\n              }}\r\n          />\r\n          <Stack.Screen\r\n              name=\"Quiz\"\r\n              component={QuizzScreen}\r\n          />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}>\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={({ navigation }: RootTabScreenProps<'Home'>) => ({\r\n          title: 'Home',\r\n            headerShown: false,\r\n          tabBarIcon: ({ color }) => <Ionicons name=\"md-home-outline\" color={color} size={26} />\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Group\"\r\n        component={GroupScreen}\r\n        options={({ navigation }: RootTabScreenProps<'Group'>) => ({\r\n          title: 'Group',\r\n            headerShown: false,\r\n          tabBarIcon: ({ color }) => <MaterialIcons name=\"groups\" color={color} size={30} />\r\n        })}\r\n      />\r\n\r\n        <BottomTab.Screen\r\n            name=\"Search\"\r\n            component={SearchScreen}\r\n            options={({ navigation }: RootTabScreenProps<'Search'>) => ({\r\n                title: 'Search',\r\n                headerShown: false,\r\n                tabBarIcon: ({ color }) => <Ionicons name=\"search\" color={color} size={26} />\r\n            })}\r\n        />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>['name'];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}