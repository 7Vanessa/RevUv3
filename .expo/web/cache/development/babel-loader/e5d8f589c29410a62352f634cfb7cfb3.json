{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\revuv3\\\\RevU_v2\\\\screens\\\\MathsGroupScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { Text } from \"../components/Themed\";\nimport { auth } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nvar db = firebase.firestore();\nvar GroupRef = db.collection('maths');\nexport default function MathsGroupScreen(_ref) {\n  var _auth$currentUser,\n      _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var params = route.params;\n  var name = params.name;\n\n  var _useState = useState(parseInt((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid)),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTitle: React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }\n      }, name)\n    });\n  }, [navigation]);\n  var appendMessages = useCallback(function (messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, [messages]);\n  useEffect(function () {\n    var unsubscribe = GroupRef.onSnapshot(function (querySnapshot) {\n      var messagesFirestore = querySnapshot.docChanges().filter(function (_ref2) {\n        var type = _ref2.type;\n        return type === 'added';\n      }).map(function (_ref3) {\n        var doc = _ref3.doc;\n        var message = doc.data();\n        return _objectSpread(_objectSpread({}, message), {}, {\n          createdAt: message.createdAt.toDate()\n        });\n      }).sort(function (a, b) {\n        return b.createdAt.getTime() - a.createdAt.getTime();\n      });\n      appendMessages(messagesFirestore);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n\n  function handleSend(messages) {\n    var writes;\n    return _regeneratorRuntime.async(function handleSend$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            writes = messages.map(function (m) {\n              return GroupRef.add(m);\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(writes));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    user: user,\n    onSend: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 30\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 20,\n    borderColor: 'gray'\n  }\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/revuv3/RevU_v2/screens/MathsGroupScreen.tsx"],"names":["React","GiftedChat","Text","auth","firebase","useCallback","useEffect","useLayoutEffect","useState","db","firestore","GroupRef","collection","MathsGroupScreen","route","navigation","params","name","parseInt","currentUser","uid","user","setUser","messages","setMessages","setOptions","headerTitle","appendMessages","previousMessages","append","unsubscribe","onSnapshot","querySnapshot","messagesFirestore","docChanges","filter","type","map","doc","message","data","createdAt","toDate","sort","a","b","getTime","handleSend","writes","m","add","Promise","all","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","padding","input","height","width","borderWidth","marginBottom","borderColor"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,IAAT;AAGA,SAAQC,IAAR;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,eAAhC,EAAiDC,QAAjD,QAAgE,OAAhE;AAEA,IAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;AACA,IAAMC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAjB;AAEA,eAAe,SAASC,gBAAT,OAAiD;AAAA;AAAA;;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5D,MAAQC,MAAR,GAAmBF,KAAnB,CAAQE,MAAR;AACA,MAAQC,IAAR,GAAiBD,MAAjB,CAAQC,IAAR;;AAEA,kBAAwBT,QAAQ,CAACU,QAAQ,sBAACf,IAAI,CAACgB,WAAN,qBAAC,kBAAkBC,GAAnB,CAAT,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AAEAjB,EAAAA,eAAe,CAAC,YAAM;AAClBQ,IAAAA,UAAU,CAACU,UAAX,CAAsB;AAClBC,MAAAA,WAAW,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOT,IAAP;AADK,KAAtB;AAGH,GAJc,EAIZ,CAACF,UAAD,CAJY,CAAf;AAMA,MAAMY,cAAc,GAAGtB,WAAW,CAC9B,UAACkB,QAAD,EAAc;AACVC,IAAAA,WAAW,CAAC,UAACI,gBAAD;AAAA,aAAsB3B,UAAU,CAAC4B,MAAX,CAAkBD,gBAAlB,EAAoCL,QAApC,CAAtB;AAAA,KAAD,CAAX;AACH,GAH6B,EAI9B,CAACA,QAAD,CAJ8B,CAAlC;AAOAjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMwB,WAAW,GAAGnB,QAAQ,CAACoB,UAAT,CAAoB,UAACC,aAAD,EAAmB;AACvD,UAAMC,iBAAiB,GAAGD,aAAa,CAClCE,UADqB,GAErBC,MAFqB,CAEd;AAAA,YAAGC,IAAH,SAAGA,IAAH;AAAA,eAAcA,IAAI,KAAK,OAAvB;AAAA,OAFc,EAGrBC,GAHqB,CAGjB,iBAAa;AAAA,YAAVC,GAAU,SAAVA,GAAU;AACd,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,EAAhB;AAGA,+CAAYD,OAAZ;AAAqBE,UAAAA,SAAS,EAAEF,OAAO,CAACE,SAAR,CAAkBC,MAAlB;AAAhC;AACH,OARqB,EASrBC,IATqB,CAShB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,CAACJ,SAAF,CAAYK,OAAZ,KAAwBF,CAAC,CAACH,SAAF,CAAYK,OAAZ,EAAlC;AAAA,OATgB,CAA1B;AAUAnB,MAAAA,cAAc,CAACM,iBAAD,CAAd;AACH,KAZmB,CAApB;AAaA,WAAO;AAAA,aAAMH,WAAW,EAAjB;AAAA,KAAP;AACH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,WAAeiB,UAAf,CAA0BxB,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUyB,YAAAA,MADV,GACmBzB,QAAQ,CAACc,GAAT,CAAa,UAACY,CAAD;AAAA,qBAAOtC,QAAQ,CAACuC,GAAT,CAAaD,CAAb,CAAP;AAAA,aAAb,CADnB;AAAA;AAAA,6CAEUE,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SACI,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEzB,QAAtB;AAAgC,IAAA,IAAI,EAAEF,IAAtC;AAA4C,IAAA,MAAM,EAAE0B,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;AAGD,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,OAAO,EAAE;AALF,GADkB;AAQ7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,WAAW,EAAE,CAHV;AAIHJ,IAAAA,OAAO,EAAE,EAJN;AAKHK,IAAAA,YAAY,EAAE,EALX;AAMHC,IAAAA,WAAW,EAAE;AANV;AARsB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, TextInput, TouchableOpacity} from 'react-native';\r\n\r\nimport { GiftedChat } from 'react-native-gifted-chat'\r\n\r\nimport { Text, View } from '../components/Themed';\r\n\r\nimport {useNavigation, useRoute} from \"@react-navigation/native\";\r\nimport {auth} from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport {useCallback, useEffect, useLayoutEffect, useState} from \"react\";\r\n\r\nconst db = firebase.firestore()\r\nconst GroupRef = db.collection('maths')\r\n\r\nexport default function MathsGroupScreen({ route, navigation }) {\r\n    const { params } = route;\r\n    const { name } = params;\r\n\r\n    const [user, setUser] = useState(parseInt(auth.currentUser?.uid as string))\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerTitle: <Text>{name}</Text>,\r\n        });\r\n    }, [navigation]);\r\n\r\n    const appendMessages = useCallback(\r\n        (messages) => {\r\n            setMessages((previousMessages) => GiftedChat.append(previousMessages, messages))\r\n        },\r\n        [messages]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = GroupRef.onSnapshot((querySnapshot) => {\r\n            const messagesFirestore = querySnapshot\r\n                .docChanges()\r\n                .filter(({ type }) => type === 'added')\r\n                .map(({ doc }) => {\r\n                    const message = doc.data()\r\n                    //createdAt is firebase.firestore.Timestamp instance\r\n                    //https://firebase.google.com/docs/reference/js/firebase.firestore.Timestamp\r\n                    return { ...message, createdAt: message.createdAt.toDate() }\r\n                })\r\n                .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\r\n            appendMessages(messagesFirestore)\r\n        })\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    async function handleSend(messages) {\r\n        const writes = messages.map((m) => GroupRef.add(m))\r\n        await Promise.all(writes)\r\n    }\r\n\r\n    return (\r\n        <GiftedChat messages={messages} user={user} onSend={handleSend} />\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 30,\r\n    },\r\n    input: {\r\n        height: 50,\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        padding: 15,\r\n        marginBottom: 20,\r\n        borderColor: 'gray',\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}