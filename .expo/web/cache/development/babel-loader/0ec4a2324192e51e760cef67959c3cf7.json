{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"FACILE\"] = \"easy\";\n  Difficulty[\"MOYEN\"] = \"medium\";\n  Difficulty[\"DIFFICILE\"] = \"hard\";\n})(Difficulty || (Difficulty = {}));\n\nexport var fetchQuestions = function fetchQuestions(amount, difficulty) {\n  var recuperation, data;\n  return _regeneratorRuntime.async(function fetchQuestions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          recuperation = \"https://opentdb.com/api.php?amount=\" + amount + \"&difficulty=\" + difficulty + \"$type=multiple\";\n          _context.t0 = _regeneratorRuntime;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(recuperation));\n\n        case 4:\n          _context.t1 = _context.sent.json();\n          _context.next = 7;\n          return _context.t0.awrap.call(_context.t0, _context.t1);\n\n        case 7:\n          data = _context.sent;\n          console.log(data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/API.ts"],"names":["Difficulty","fetchQuestions","amount","difficulty","recuperation","fetch","json","data","console","log"],"mappings":";AAAA,WAAYA,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAcZ,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,MAAP,EAAuBC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,YADoB,2CACiCF,MADjC,oBACsDC,UADtD;AAAA;AAAA;AAAA,2CAEAE,KAAK,CAACD,YAAD,CAFL;;AAAA;AAAA,sCAEqBE,IAFrB;AAAA;AAAA;;AAAA;AAEpBC,UAAAA,IAFoB;AAG1BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["export enum Difficulty {\r\n    FACILE = \"easy\",\r\n    MOYEN = \"medium\",\r\n    DIFFICILE = \"hard\",\r\n}\r\n\r\nexport type Question = {\r\n    category: string;\r\n    correct_answer: string;\r\n    difficulty: string;\r\n    incorrect_answer: string[];\r\n    question: string;\r\n}\r\n\r\nexport const fetchQuestions = async (amount: number, difficulty: Difficulty) => {\r\n    const recuperation = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}$type=multiple`\r\n    const data = await (await fetch(recuperation)).json();\r\n    console.log(data)\r\n}"]},"metadata":{},"sourceType":"module"}