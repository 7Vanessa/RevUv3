{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\navigation\\\\index.tsx\";\nimport { FontAwesome, Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport GroupScreen from \"../screens/GroupScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport ProfilScreen from \"../screens/ProfilScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport users from \"../Data/users\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"Rev'U\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(Ionicons, {\n            name: \"md-home-outline\",\n            color: color,\n            size: 26,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 42\n            }\n          });\n        },\n        headerLeft: function headerLeft() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Profil');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }\n          }, React.createElement(FlatList, {\n            data: users,\n            renderItem: function renderItem(_ref5) {\n              var item = _ref5.item;\n              return React.createElement(ChatListItem, {\n                chatRoom: item,\n                keyExtractor: function keyExtractor(item) {\n                  return item.id;\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 53\n                }\n              });\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }\n          }));\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Settings');\n            },\n            style: function style(_ref6) {\n              var pressed = _ref6.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }\n          }, React.createElement(Ionicons, {\n            name: \"settings-outline\",\n            size: 25,\n            color: colors.text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'settings'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profil\",\n    component: ProfilScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var _this2 = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref7) {\n      var navigation = _ref7.navigation;\n      return {\n        title: 'Home',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var color = _ref8.color;\n          return React.createElement(Ionicons, {\n            name: \"md-home-outline\",\n            color: color,\n            size: 26,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 38\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Settings');\n            },\n            style: function style(_ref9) {\n              var pressed = _ref9.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }\n          }, React.createElement(Ionicons, {\n            name: \"settings-outline\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Group\",\n    component: GroupScreen,\n    options: function options(_ref10) {\n      var navigation = _ref10.navigation;\n      return {\n        title: 'Group',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref11) {\n          var color = _ref11.color;\n          return React.createElement(MaterialIcons, {\n            name: \"groups\",\n            color: color,\n            size: 30,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 38\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Settings');\n            },\n            style: function style(_ref12) {\n              var pressed = _ref12.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }\n          }, React.createElement(Ionicons, {\n            name: \"settings-outline\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: function options(_ref13) {\n      var navigation = _ref13.navigation;\n      return {\n        title: 'Search',\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref14) {\n          var color = _ref14.color;\n          return React.createElement(Ionicons, {\n            name: \"search\",\n            color: color,\n            size: 26,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 44\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Settings');\n            },\n            style: function style(_ref15) {\n              var pressed = _ref15.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }\n          }, React.createElement(Ionicons, {\n            name: \"settings-outline\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/navigation/index.tsx"],"names":["FontAwesome","Ionicons","MaterialIcons","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","useTheme","createNativeStackNavigator","React","Colors","useColorScheme","NotFoundScreen","SettingsScreen","HomeScreen","GroupScreen","SearchScreen","ProfilScreen","LinkingConfiguration","users","Navigation","colorScheme","Stack","RootNavigator","colors","BottomTabNavigator","navigation","title","tabBarIcon","color","headerLeft","navigate","pressed","opacity","item","id","headerRight","text","marginRight","presentation","BottomTab","tabBarActiveTintColor","tint","headerShown","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome, Ionicons, MaterialIcons} from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme, useTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport {ColorSchemeName, FlatList, Pressable, Settings} from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport HomeScreen from '../screens/HomeScreen';\nimport GroupScreen from '../screens/GroupScreen';\nimport SearchScreen from '../screens/SearchScreen';\nimport ProfilScreen from '../screens/ProfilScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nimport ProfilPicture from \"../components/ProfilPicture\";\nimport users from \"../Data/users\";\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n    const { colors } = useTheme();\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n          name=\"Root\"\n          component={BottomTabNavigator}\n          options={({ navigation }: RootTabScreenProps<'Root'>) => ({\n              title: \"Rev'U\",\n              tabBarIcon: ({ color }) => <Ionicons name=\"md-home-outline\" color={color} size={26} />,\n              headerLeft: () => (\n                  <Pressable\n                      onPress={() => navigation.navigate('Profil')}\n                      style={({ pressed }) => ({\n                          opacity: pressed ? 0.5 : 1,\n                      })}>\n                      <FlatList\n                          data={users}\n                          renderItem={({ item }) => <ChatListItem chatRoom={item}\n                                                                  keyExtractor={(item) => item.id}\n                          />}\n                      />\n                  </Pressable>\n              ),\n              headerRight: () => (\n                  <Pressable\n                      onPress={() => navigation.navigate('Settings')}\n                      style={({ pressed }) => ({\n                          opacity: pressed ? 0.5 : 1,\n                      })}>\n                      <Ionicons\n                          name=\"settings-outline\"\n                          size={25}\n                          color={colors.text}\n                          style={{ marginRight: 15 }}\n                      />\n                  </Pressable>\n              ),\n          })}\n      />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'settings' }}>\n          <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n          <Stack.Screen name=\"Profil\" component={ProfilScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={({ navigation }: RootTabScreenProps<'Home'>) => ({\n          title: 'Home',\n            headerShown: false,\n          tabBarIcon: ({ color }) => <Ionicons name=\"md-home-outline\" color={color} size={26} />,\n            headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Settings')}\n                style={({ pressed }) => ({\n                    opacity: pressed ? 0.5 : 1,\n                })}>\n              <Ionicons\n                name=\"settings-outline\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Group\"\n        component={GroupScreen}\n        options={({ navigation }: RootTabScreenProps<'Group'>) => ({\n          title: 'Group',\n            headerShown: false,\n          tabBarIcon: ({ color }) => <MaterialIcons name=\"groups\" color={color} size={30} />,\n            headerRight: () => (\n                <Pressable\n                    onPress={() => navigation.navigate('Settings')}\n                    style={({ pressed }) => ({\n                        opacity: pressed ? 0.5 : 1,\n                    })}>\n                    <Ionicons\n                        name=\"settings-outline\"\n                        size={25}\n                        color={Colors[colorScheme].text}\n                        style={{ marginRight: 15 }}\n                    />\n                </Pressable>\n            ),\n        })}\n      />\n\n        <BottomTab.Screen\n            name=\"Search\"\n            component={SearchScreen}\n            options={({ navigation }: RootTabScreenProps<'Search'>) => ({\n                title: 'Search',\n                headerShown: false,\n                tabBarIcon: ({ color }) => <Ionicons name=\"search\" color={color} size={26} />,\n                headerRight: () => (\n                    <Pressable\n                        onPress={() => navigation.navigate('Settings')}\n                        style={({ pressed }) => ({\n                            opacity: pressed ? 0.5 : 1,\n                        })}>\n                        <Ionicons\n                            name=\"settings-outline\"\n                            size={25}\n                            color={Colors[colorScheme].text}\n                            style={{ marginRight: 15 }}\n                        />\n                    </Pressable>\n                ),\n            })}\n        />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}