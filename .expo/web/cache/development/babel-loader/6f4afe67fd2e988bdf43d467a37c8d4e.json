{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\screens\\\\SearchScreen.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Difficulty, fetchQuestions } from \"../API\";\nimport QuestionCard from \"../components/QuestionCard/QuestionCard\";\nvar TOTAL_QUESTIONS = 10;\nimport styled from \"styled-components\";\nvar Button = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  font-size: 19px;\\n  border-radius: 10px;\\n  margin-bottom: 10px;\\n  background-color: darkgrey;\\n\"])));\nexport default function SearchScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      points = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chargement = _useState6[0],\n      setChargement = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      termine = _useState8[0],\n      setTermine = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userAnswers = _useState10[0],\n      setUserAnswers = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      numero = _useState12[0],\n      setNumero = _useState12[1];\n\n  console.log(questions);\n\n  var validateAnswer = function validateAnswer(e) {\n    if (!termine) {\n      var answer = e.currentTarget.value;\n      var correct = questions[numero].correct_answer === answer;\n\n      if (correct) {\n        setPoints(function (prevState) {\n          return prevState + 1;\n        });\n      }\n\n      var objectAnswer = {\n        question: questions[numero].question,\n        answer: answer,\n        correct: correct,\n        correct_answer: questions[numero].correct_answer\n      };\n      setUserAnswers(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [objectAnswer]);\n      });\n    }\n  };\n\n  var nextQuestion = function nextQuestion() {\n    var suivQuestion = numero + 1;\n\n    if (suivQuestion === TOTAL_QUESTIONS) {\n      setTermine(true);\n    } else {\n      setNumero(suivQuestion);\n    }\n  };\n\n  var startQuiz = function startQuiz() {\n    var nouvellesQuestions;\n    return _regeneratorRuntime.async(function startQuiz$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setChargement(true);\n            setTermine(false);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetchQuestions(TOTAL_QUESTIONS, Difficulty.FACILE));\n\n          case 4:\n            nouvellesQuestions = _context.sent;\n            setQuestions(nouvellesQuestions);\n            setPoints(0);\n            setUserAnswers([]);\n            setNumero(0);\n            setChargement(false);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Quiz\"), termine || userAnswers.length === TOTAL_QUESTIONS ? React.createElement(Button, {\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Commencer\") : null, !termine ? React.createElement(\"p\", {\n    className: \"points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Points : \", points) : null, chargement && React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 28\n    }\n  }, \"Chargement\"), !chargement && !termine && React.createElement(QuestionCard, {\n    numQuestion: numero + 1,\n    totalQuestions: TOTAL_QUESTIONS,\n    question: questions[numero].question,\n    answers: questions[numero].answers,\n    userAnswer: userAnswers ? userAnswers[numero] : undefined,\n    callback: validateAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 42\n    }\n  }), !termine && !chargement && userAnswers.length === numero + 1 && numero !== TOTAL_QUESTIONS - 1 ? React.createElement(\"button\", {\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Suivant\") : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginLeft: '10px',\n    marginRight: '10px'\n  },\n  points: {},\n  commencer: {},\n  suivant: {}\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/screens/SearchScreen.tsx"],"names":["React","useState","Difficulty","fetchQuestions","QuestionCard","TOTAL_QUESTIONS","styled","Button","button","SearchScreen","questions","setQuestions","points","setPoints","chargement","setChargement","termine","setTermine","userAnswers","setUserAnswers","numero","setNumero","console","log","validateAnswer","e","answer","currentTarget","value","correct","correct_answer","prevState","objectAnswer","question","nextQuestion","suivQuestion","startQuiz","FACILE","nouvellesQuestions","styles","container","length","answers","undefined","StyleSheet","create","marginLeft","marginRight","commencer","suivant"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAAQC,UAAR,EAAoBC,cAApB;AAIA,OAAOC,YAAP;AASA,IAAMC,eAAe,GAAG,EAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,+KAAZ;AAOA,eAAe,SAASC,YAAT,GAAwB;AAEnC,kBAAkCR,QAAQ,CAAkB,EAAlB,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4BV,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoCZ,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOa,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA8Bd,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAsChB,QAAQ,CAAiB,EAAjB,CAA9C;AAAA;AAAA,MAAOiB,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA4BlB,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOmB,MAAP;AAAA,MAAeC,SAAf;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;;AAEA,MAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAA4C;AAC/D,QAAG,CAACT,OAAJ,EAAa;AACT,UAAMU,MAAM,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA/B;AACA,UAAMC,OAAO,GAAGnB,SAAS,CAACU,MAAD,CAAT,CAAkBU,cAAlB,KAAqCJ,MAArD;;AACA,UAAGG,OAAH,EAAY;AACRhB,QAAAA,SAAS,CAAC,UAAAkB,SAAS;AAAA,iBAAIA,SAAS,GAAC,CAAd;AAAA,SAAV,CAAT;AACH;;AACD,UAAMC,YAAY,GAAG;AACjBC,QAAAA,QAAQ,EAAGvB,SAAS,CAACU,MAAD,CAAT,CAAkBa,QADZ;AAEjBP,QAAAA,MAAM,EAANA,MAFiB;AAGjBG,QAAAA,OAAO,EAAPA,OAHiB;AAIjBC,QAAAA,cAAc,EAAEpB,SAAS,CAACU,MAAD,CAAT,CAAkBU;AAJjB,OAArB;AAOAX,MAAAA,cAAc,CAAC,UAAAY,SAAS;AAAA,4CAAQA,SAAR,IAAmBC,YAAnB;AAAA,OAAV,CAAd;AACH;AACJ,GAhBD;;AAkBA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMC,YAAY,GAAGf,MAAM,GAAC,CAA5B;;AACA,QAAIe,YAAY,KAAK9B,eAArB,EAAsC;AAClCY,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAGK;AACDI,MAAAA,SAAS,CAACc,YAAD,CAAT;AACH;AACJ,GARD;;AAUA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACdrB,YAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,YAAAA,UAAU,CAAC,KAAD,CAAV;AAFc;AAAA,6CAImBd,cAAc,CAACE,eAAD,EAAkBH,UAAU,CAACmC,MAA7B,CAJjC;;AAAA;AAIRC,YAAAA,kBAJQ;AAMd3B,YAAAA,YAAY,CAAC2B,kBAAD,CAAZ;AACAzB,YAAAA,SAAS,CAAC,CAAD,CAAT;AACAM,YAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,YAAAA,SAAS,CAAC,CAAD,CAAT;AAEAN,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAcA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKxB,OAAO,IAAIE,WAAW,CAACuB,MAAZ,KAAuBpC,eAAlC,GACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE+B,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,GACqD,IAH1D,EAIK,CAACpB,OAAD,GAAW;AAAG,IAAA,SAAS,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkCJ,MAAlC,CAAX,GAA0D,IAJ/D,EAKKE,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALnB,EAMK,CAACA,UAAD,IAAe,CAACE,OAAhB,IAA4B,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEI,MAAM,GAAG,CAApC;AAAuC,IAAA,cAAc,EAAEf,eAAvD;AACd,IAAA,QAAQ,EAAEK,SAAS,CAACU,MAAD,CAAT,CAAkBa,QADd;AACwB,IAAA,OAAO,EAAEvB,SAAS,CAACU,MAAD,CAAT,CAAkBsB,OADnD;AAEd,IAAA,UAAU,EAAExB,WAAW,GAAGA,WAAW,CAACE,MAAD,CAAd,GAAyBuB,SAFlC;AAE6C,IAAA,QAAQ,EAAEnB,cAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANjC,EASK,CAACR,OAAD,IAAY,CAACF,UAAb,IAA2BI,WAAW,CAACuB,MAAZ,KAAuBrB,MAAM,GAAC,CAAzD,IAA8DA,MAAM,KAAIf,eAAe,GAAC,CAAxF,GACG;AAAQ,IAAA,OAAO,EAAE6B,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,GACsD,IAV3D,CADJ;AAeH;AAED,IAAMK,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,UAAU,EAAE,MADL;AAEPC,IAAAA,WAAW,EAAE;AAFN,GADkB;AAM7BnC,EAAAA,MAAM,EAAE,EANqB;AAU7BoC,EAAAA,SAAS,EAAE,EAVkB;AAc7BC,EAAAA,OAAO,EAAE;AAdoB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {Difficulty, fetchQuestions, StateQuestion} from \"../API\";\r\n\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport {useTheme} from \"@react-navigation/native\";\r\nimport QuestionCard from \"../components/QuestionCard/QuestionCard\";\r\n\r\nexport type ObjectAnswer = {\r\n    question: string;\r\n    answer: string;\r\n    correct: boolean;\r\n    correct_answer: string;\r\n}\r\n\r\nconst TOTAL_QUESTIONS = 10\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-size: 19px;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n  background-color: darkgrey;\r\n`;\r\n\r\nexport default function SearchScreen() {\r\n\r\n    const [questions, setQuestions] = useState<StateQuestion[]>([])\r\n    const [points, setPoints] = useState(0)\r\n    const [chargement, setChargement] = useState(false)\r\n    const [termine, setTermine] = useState(true)\r\n    const [userAnswers, setUserAnswers] = useState<ObjectAnswer[]>([])\r\n    const [numero, setNumero] = useState(0)\r\n\r\n    console.log(questions)\r\n\r\n    const validateAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        if(!termine) {\r\n            const answer = e.currentTarget.value\r\n            const correct = questions[numero].correct_answer === answer\r\n            if(correct) {\r\n                setPoints(prevState => prevState+1)\r\n            }\r\n            const objectAnswer = {\r\n                question : questions[numero].question,\r\n                answer,\r\n                correct,\r\n                correct_answer: questions[numero].correct_answer,\r\n            }\r\n\r\n            setUserAnswers(prevState => [...prevState, objectAnswer])\r\n        }\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        const suivQuestion = numero+1\r\n        if (suivQuestion === TOTAL_QUESTIONS) {\r\n            setTermine(true)\r\n        }\r\n        else {\r\n            setNumero(suivQuestion)\r\n        }\r\n    }\r\n\r\n    const startQuiz = async () => {\r\n        setChargement(true)\r\n        setTermine(false)\r\n\r\n        const nouvellesQuestions = await fetchQuestions(TOTAL_QUESTIONS, Difficulty.FACILE)\r\n\r\n        setQuestions(nouvellesQuestions)\r\n        setPoints(0)\r\n        setUserAnswers([])\r\n        setNumero(0)\r\n\r\n        setChargement(false)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <p>Quiz</p>\r\n            {termine || userAnswers.length === TOTAL_QUESTIONS ? (\r\n                <Button onClick={startQuiz}>Commencer</Button>) : null}\r\n            {!termine ? <p className={\"points\"}>Points : {points}</p>: null}\r\n            {chargement && <p>Chargement</p>}\r\n            {!chargement && !termine && (<QuestionCard numQuestion={numero + 1} totalQuestions={TOTAL_QUESTIONS}\r\n                           question={questions[numero].question} answers={questions[numero].answers}\r\n                           userAnswer={userAnswers ? userAnswers[numero] : undefined} callback={validateAnswer}/>)}\r\n            {!termine && !chargement && userAnswers.length === numero+1 && numero!== TOTAL_QUESTIONS-1 ?(\r\n                <button onClick={nextQuestion}>Suivant</button>) : null}\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginLeft: '10px',\r\n        marginRight: '10px'\r\n    },\r\n\r\n    points: {\r\n\r\n    },\r\n\r\n    commencer: {\r\n\r\n    },\r\n\r\n    suivant: {\r\n\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}