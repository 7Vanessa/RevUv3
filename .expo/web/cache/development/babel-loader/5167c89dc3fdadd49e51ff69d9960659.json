{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmoha\\\\Documents\\\\EFREI\\\\Semestre 5\\\\Projet Transverse\\\\Rev-U\\\\RevU\\\\screens\\\\SearchScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport QuestionCard from \"../components/QuestionCard/QuestionCard\";\nexport default function SearchScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      points = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chargement = _useState6[0],\n      setChargement = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      termine = _useState8[0],\n      setTermine = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userAnswers = _useState10[0],\n      setUserAnswers = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      numero = _useState12[0],\n      setNumero = _useState12[1];\n\n  var validateAnswer = function validateAnswer(e) {};\n\n  var nextQuestion = function nextQuestion() {};\n\n  var startQuiz = function startQuiz() {\n    return _regeneratorRuntime.async(function startQuiz$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Quiz\"), React.createElement(\"button\", {\n    style: styles.commencer,\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Commencer\"), React.createElement(\"p\", {\n    style: styles.points,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Points : \"), React.createElement(QuestionCard, {\n    numQuestion: numero + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(\"button\", {\n    style: styles.suivant,\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Suivant\"));\n}\nvar styles = StyleSheet.create({\n  container: {},\n  points: {},\n  commencer: {},\n  suivant: {}\n});","map":{"version":3,"sources":["C:/Users/vmoha/Documents/EFREI/Semestre 5/Projet Transverse/Rev-U/RevU/screens/SearchScreen.tsx"],"names":["React","useState","QuestionCard","SearchScreen","questions","setQuestions","points","setPoints","chargement","setChargement","termine","setTermine","userAnswers","setUserAnswers","numero","setNumero","validateAnswer","e","nextQuestion","startQuiz","styles","container","commencer","suivant","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,OAAOC,YAAP;AAGA,eAAe,SAASC,YAAT,GAAwB;AAEnC,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA4BJ,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoCN,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA8BR,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAsCV,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOW,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA4BZ,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAA4C,CAElE,CAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM,CAE1B,CAFD;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,IAAA,KAAK,EAAED,MAAM,CAACE,SAAtB;AAAiC,IAAA,OAAO,EAAEH,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAG,IAAA,KAAK,EAAEC,MAAM,CAACd,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEQ,MAAM,GAAC,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,KAAK,EAAEM,MAAM,CAACG,OAAtB;AAA+B,IAAA,OAAO,EAAEL,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADJ;AAUH;AAED,IAAME,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE,EADkB;AAK7Bf,EAAAA,MAAM,EAAE,EALqB;AAS7BgB,EAAAA,SAAS,EAAE,EATkB;AAa7BC,EAAAA,OAAO,EAAE;AAboB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {Button, StyleSheet, Text, View} from 'react-native';\r\n\r\nimport QuestionCard from \"../components/QuestionCard/QuestionCard\";\r\n\r\n\r\nexport default function SearchScreen() {\r\n\r\n    const [questions, setQuestions] = useState([])\r\n    const [points, setPoints] = useState(0)\r\n    const [chargement, setChargement] = useState(false)\r\n    const [termine, setTermine] = useState(true)\r\n    const [userAnswers, setUserAnswers] = useState([])\r\n    const [numero, setNumero] = useState(0)\r\n\r\n    const validateAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n\r\n    }\r\n\r\n    const startQuiz = async () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <p>Quiz</p>\r\n            <button style={styles.commencer} onClick={startQuiz}>Commencer</button>\r\n            <p style={styles.points}>Points : </p>\r\n            <QuestionCard numQuestion={numero+1} />\r\n            <button style={styles.suivant} onClick={nextQuestion}>Suivant</button>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n    },\r\n\r\n    points: {\r\n\r\n    },\r\n\r\n    commencer: {\r\n\r\n    },\r\n\r\n    suivant: {\r\n\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}